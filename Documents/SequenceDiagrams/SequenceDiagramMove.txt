title Sequence diagram: Move

GameController->PlayerController: movePlayer
note left of PlayerController: GameController sends keycode
PlayerController->PlayerController: updateSpeed
PlayerController->Player: Get the position of the player
Player --> PlayerController: Returns the position of the player
PlayerController->CollisionController: Checks what type of terrain in position
CollisionController->CollisionModel: Checks if slower terrain
CollisionModel --> CollisionController: Boolean=false for normal terrain
CollisionController --> PlayerController: Boolean=false for normal terrain
PlayerController -> Player: Sets the normal speed for the player
PlayerController -> Player: Get the next position for the player
Player --> PlayerController: Returns the next position for the player
PlayerController -> CollisionController: Checks if collision will happen for next position
note right of PlayerController: CollisionController checks a set of different positions for the player, with the environment.
CollisionController --> PlayerController: Boolean=false for no collision
PlayerController -> PlayerView: Sets the animation for the player
PlayerController -> Player: Player can move as it should
Player -> Player: Updates the position for the player if not outside world
PlayerController -> PlayerController: updateSprite
PlayerController -> Player: Gets the position from the player
Player --> PlayerController: Return the position of the player
PlayerController -> PlayerView: Sets the position for the sprite according to the player position
PlayerController -> GameView: Get the worldheight, worldwidth, tileheight and tilewidth
GameView --> PlayerController: Returns the worldheight, worldwidth, tileheight and tiledwidth
PlayerController -> PlayerView: Move the camera
PlayerView -> PlayerView: moveCamera: checks if the camera can move according to the current worldsize
PlayerView -> PlayerView: Sets the camera position
